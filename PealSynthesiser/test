(declare-const q4 Bool)
(declare-const q1 Bool)
(declare-const cond2 Bool)
(declare-const cond1 Bool)
(declare-const b0_score_q4 Real)
(assert (implies q4 (= 0.17)))
(assert (implies (not (= 1.0 b0_score_q4)) q4))
(declare-const b2_score_q4 Real)
(assert (implies q4 (= 0.86)))
(assert (implies (not (= 0.0 b2_score_q4)) q4))
(declare-const cond2_b0 Bool)
(assert (= cond2_b0 (or (and (< 0.6 0.95) (not (or q4)))  (and (or q4)  (< 0.6 (* b0_score_q4))))))
(declare-const cond2_b1 Bool)
(assert (= cond2_b1 (or (and (< 0.6 0.51) (not (or q1)))
(or q1))))
(declare-const cond2_b2 Bool)
(assert (= cond2_b2 (or (and (< 0.6 0.99) (not (or q4)))  (and (or q4)  (< 0.6 (+ b2_score_q4))))))
(declare-const cond2_b3 Bool)
(assert (= cond2_b3 (or (and (< 0.6 0.83) (not (or q4 q1)))
(and (or q4 q1) (not false)))))
(assert (= cond2 (or (and cond2_b0 cond2_b1) (and cond2_b2 cond2_b3))))
(declare-const cond1_b0 Bool)
(assert (= cond1_b0 (or (and (< 0.5 0.95) (not (or q4)))  (and (or q4)  (< 0.5 (* b0_score_q4))))))
(declare-const cond1_b1 Bool)
(assert (= cond1_b1 (or (and (< 0.5 0.51) (not (or q1)))
(or q1))))
(declare-const cond1_b2 Bool)
(assert (= cond1_b2 (or (and (< 0.5 0.99) (not (or q4)))  (and (or q4)  (< 0.5 (+ b2_score_q4))))))
(declare-const cond1_b3 Bool)
(assert (= cond1_b3 (or (and (< 0.5 0.83) (not (or q4 q1)))
(and (or q4 q1) (not false)))))
(assert (= cond1 (or (and cond1_b0 cond1_b1) (and cond1_b2 cond1_b3))))

(echo "Result of analysis [analysis1 = always_true? cond1]:")
(push)
(declare-const always_true_analysis1 Bool)
(assert (= always_true_analysis1 cond1))
(assert (not always_true_analysis1))
(check-sat)
(get-model)
(pop)